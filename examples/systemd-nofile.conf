# /etc/systemd/system/prosody.service.d/LimitNOFILE.conf
# Systemd drop-in configuration for Prosody XMPP Server
# Implements scalability recommendations from Prosody public server documentation
# Reference: https://prosody.im/doc/public_servers#scalability

[Service]
# Raise the per-process file limit to 1M file descriptors
# This is critical for large public servers with many concurrent connections
LimitNOFILE=1M

# Additional performance optimizations for public servers
# Increase other resource limits for large-scale deployments

# Memory limits (adjust based on server capacity)
# LimitAS=8G                    # Virtual memory limit (8GB)
# LimitRSS=4G                   # Resident set size limit (4GB)

# Process limits
# LimitNPROC=65536              # Maximum number of processes

# Core dump configuration for debugging
# LimitCORE=infinity            # Allow core dumps for debugging
# CoreDumpFilter=0x7f           # Include shared memory in core dumps

# Additional systemd service optimizations
# Restart=always                # Always restart on failure
# RestartSec=5                  # Wait 5 seconds before restart
# StartLimitInterval=60         # Reset start limit counter after 60 seconds
# StartLimitBurst=3             # Allow 3 restart attempts within interval

# Security enhancements (uncomment for hardened deployments)
# NoNewPrivileges=true          # Prevent privilege escalation
# ProtectSystem=strict          # Protect system directories
# ProtectHome=true              # Protect home directories
# PrivateTmp=true               # Use private /tmp
# PrivateDevices=true           # Use private /dev

# Installation Instructions:
# 1. Create directory: mkdir -p /etc/systemd/system/prosody.service.d/
# 2. Copy this file: cp examples/systemd-nofile.conf /etc/systemd/system/prosody.service.d/LimitNOFILE.conf
# 3. Reload systemd: systemctl daemon-reload
# 4. Restart Prosody: systemctl restart prosody
# 5. Verify limits: systemctl show prosody | grep LimitNOFILE

# Verification Commands:
# Check current limits: cat /proc/$(pgrep prosody)/limits
# Check open files: lsof -p $(pgrep prosody) | wc -l
# Monitor file descriptors: watch "cat /proc/$(pgrep prosody)/limits | grep 'open files'" 