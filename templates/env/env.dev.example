# ============================================================================
# DEVELOPMENT ENVIRONMENT FOR PROSODY XMPP SERVER
# Localhost Testing Configuration
# ============================================================================
# Copy this file to .env.dev and customize as needed for your development setup
# Usage: docker compose -f docker-compose.dev.yml up -d

# ============================================================================
# DOMAIN CONFIGURATION (Development)
# ============================================================================

# Development domain (localhost friendly)
# Users will have JIDs like: user@localhost, admin@localhost
PROSODY_DOMAIN=localhost
# Optionally separate service host (useful for dev when testing split domains)
# PROSODY_SERVICE_HOST=localhost

# Administrator JIDs (development)
PROSODY_ADMINS=admin@localhost,dev@localhost

# Let's Encrypt email (not used in development, but required)
LETSENCRYPT_EMAIL=dev@localhost

# ============================================================================
# DATABASE CONFIGURATION (Development)
# ============================================================================

# Simple development database credentials
PROSODY_DB_NAME=prosody
PROSODY_DB_USER=prosody
PROSODY_DB_PASSWORD=devpassword

# PostgreSQL container variables (should match PROSODY_DB_* values)
POSTGRES_DB=prosody
POSTGRES_USER=prosody
POSTGRES_PASSWORD=devpassword

# ============================================================================
# PORT CONFIGURATION (Development - Standard Ports)
# ============================================================================

# XMPP ports (standard ports for development)
PROSODY_C2S_PORT=5222              # Client connections (STARTTLS)
PROSODY_S2S_PORT=5269              # Server-to-server
PROSODY_C2S_DIRECT_TLS_PORT=5223   # Client connections (Direct TLS)
PROSODY_S2S_DIRECT_TLS_PORT=5270   # Server-to-server (Direct TLS)

# Web services ports (standard ports)
PROSODY_HTTP_PORT=5280             # HTTP (BOSH/WebSocket/Admin)
PROSODY_HTTPS_PORT=5281            # HTTPS (BOSH/WebSocket/Admin)

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Enable registration for easy testing
PROSODY_ALLOW_REGISTRATION=true

# Debug logging for development
PROSODY_LOG_LEVEL=debug

# Generous file upload limits for testing
PROSODY_UPLOAD_SIZE_LIMIT=104857600  # 100MB per file

# ============================================================================
# FILE UPLOAD SETTINGS (Development)
# ============================================================================

# Daily upload quota per user (generous for development)
PROSODY_UPLOAD_DAILY_QUOTA=1073741824  # 1GB per day

# File expiration time (shorter for development)
PROSODY_UPLOAD_EXPIRE_AFTER=604800  # 7 days

# Allow all file types for testing
# PROSODY_UPLOAD_ALLOWED_TYPES=  # Commented out = all types allowed

# ============================================================================
# MESSAGE ARCHIVE MANAGEMENT (Development)
# ============================================================================

# Shorter retention for development
PROSODY_ARCHIVE_EXPIRES_AFTER=30d  # 30 days

# Archive all messages for testing
PROSODY_ARCHIVE_POLICY=true

# Smaller query limits for development
PROSODY_ARCHIVE_MAX_QUERY_RESULTS=50

# More frequent cleanup for development
PROSODY_ARCHIVE_CLEANUP_INTERVAL=3600  # 1 hour

# Enable smart archiving for testing
PROSODY_MAM_SMART_ENABLE=false

# Enable compression
PROSODY_ARCHIVE_COMPRESSION=true

# ============================================================================
# MUC (MULTI-USER CHAT) SETTINGS (Development)
# ============================================================================

# Enable MUC archiving by default
PROSODY_MUC_LOG_BY_DEFAULT=true

# Log presence changes for testing
PROSODY_MUC_LOG_PRESENCES=true

# Shorter MUC retention
PROSODY_MUC_LOG_EXPIRES_AFTER=7d  # 7 days

# Frequent MUC cleanup
PROSODY_MUC_LOG_CLEANUP_INTERVAL=3600  # 1 hour

# Smaller MUC query results
PROSODY_MUC_MAX_ARCHIVE_QUERY_RESULTS=25

# ============================================================================
# TURN/STUN SERVER CONFIGURATION (Development)
# ============================================================================

# TURN server ports (standard)
TURN_PORT=3478                     # STUN/TURN port
TURNS_PORT=5349                    # TURN over TLS port
TURN_MIN_PORT=49152                # RTP relay port range start (smaller range)
TURN_MAX_PORT=49200                # RTP relay port range end

# Simple development credentials
TURN_USERNAME=prosody
TURN_PASSWORD=devpassword
TURN_SECRET=devsecret

# Development domain configuration
TURN_DOMAIN=localhost
TURN_REALM=localhost

# ============================================================================
# MONITORING CONFIGURATION (Development)
# ============================================================================

# Manual statistics for development
PROSODY_STATISTICS_INTERVAL=manual

# Allow all IPs for metrics (development only!)
PROSODY_METRICS_ALLOW_IPS=127.0.0.1,::1,172.21.0.0/16

# ============================================================================
# SECURITY SETTINGS (Development - Relaxed)
# ============================================================================

# Allow more connections per IP for testing
PROSODY_MAX_CONNECTIONS_PER_IP=10

# Relaxed registration throttling
PROSODY_REGISTRATION_THROTTLE_MAX=10
PROSODY_REGISTRATION_THROTTLE_PERIOD=60

# ============================================================================
# SERVICE DISCOVERY SETTINGS (Development)
# ============================================================================

# Expose admin accounts for easy discovery
PROSODY_DISCO_EXPOSE_ADMINS=true

# Add some test services for discovery
PROSODY_DISCO_ITEMS="conference.localhost,Conference Server;upload.localhost,File Upload Service"

# ============================================================================
# STATIC FILE SERVING (Development)
# ============================================================================

# Enable static file serving for development
PROSODY_HTTP_FILES_DIR=/var/www/html
PROSODY_HTTP_DIR_LISTING=true

# ============================================================================
# DEVELOPMENT FLAGS
# ============================================================================

# Enable development mode features
PROSODY_DEVELOPMENT_MODE=true

# Disable some production security features for easier testing
PROSODY_STRICT_TLS=false

# Allow self-signed certificates
PROSODY_ALLOW_SELF_SIGNED=true

# Enable all debugging features
PROSODY_DEBUG_ENABLED=true

# ============================================================================
# NOTES FOR DEVELOPMENT
# ============================================================================

# Access URLs for development:
# - Admin Panel: http://localhost:5280/admin or https://localhost:5281/admin
# - File Upload: https://localhost:5281/upload
# - WebSocket: ws://localhost:5280/xmpp-websocket or wss://localhost:5281/xmpp-websocket
# - BOSH: http://localhost:5280/http-bind or https://localhost:5281/http-bind
# - Metrics: http://localhost:5280/metrics
# - Database Admin: http://localhost:8080 (Adminer)
# - Web Client: http://localhost:8081 (Converse.js)
# - Log Viewer: http://localhost:8082 (Dozzle)

# Test user creation:
# docker compose -f docker-compose.dev.yml exec xmpp-prosody-dev prosodyctl adduser test@localhost

# Connect with XMPP clients using:
# - Server: localhost
# - Port: 5222 (STARTTLS) or 5223 (Direct TLS)
# - Username: test@localhost
# - Password: [whatever you set]

# ============================================================================
# COMMUNITY MODULES (Optional)
# ============================================================================

# Additional community modules to install at runtime
# Comma-separated list of module names (mod_ prefix optional)
# Example: PROSODY_EXTRA_MODULES=mod_unified_push,mod_register_web,mod_http_upload_external
# Available modules: https://modules.prosody.im/
# PROSODY_EXTRA_MODULES=

# Self-signed certificates will be automatically generated for localhost testing 