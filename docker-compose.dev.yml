# Development Environment for Professional Prosody XMPP Server
# Simplified configuration for localhost testing and development
# Includes development tools, self-signed certificates, and localhost-friendly settings

services:
  # ============================================================================
  # PROSODY XMPP SERVER (Development Mode)
  # ============================================================================
  xmpp-prosody-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: allthingslinux/prosody:dev
    container_name: xmpp-prosody-dev
    hostname: xmpp-prosody-dev
    restart: unless-stopped

    # Development environment variables
    env_file:
      - path: .env.dev
        required: true
    environment:
      # Override for container-to-container communication
      - PROSODY_DB_HOST=xmpp-postgres-dev
      - PROSODY_DB_PORT=5432
      # Development-specific settings
      - PROSODY_LOG_LEVEL=debug
      - PROSODY_ALLOW_REGISTRATION=true
      - PROSODY_DEVELOPMENT_MODE=true

    # Port mappings (localhost friendly)
    ports:
      - '5222:5222'        # Client connections (STARTTLS)
      - '5269:5269'        # Server connections
      - '5223:5223'        # Client connections (Direct TLS)
      - '5270:5270'        # Server connections (Direct TLS)
      - '5280:5280'        # HTTP services (WebSocket, BOSH, upload, admin)
      - '5281:5281'        # HTTPS services (secure web services)

    # Volume mounts for development
    volumes:
      # Configuration (read-write for easy editing)
      - ./config:/etc/prosody/config:rw

      # Data persistence (named volumes for easy cleanup)
      - xmpp_prosody_data_dev:/var/lib/prosody/data
      - xmpp_prosody_uploads_dev:/var/lib/prosody/uploads

      # Self-signed certificates (auto-generated)
      - xmpp_certs_dev:/etc/prosody/certs

      # Scripts for development utilities
      - ./scripts:/opt/prosody/scripts:ro

      # Logs (local directory for easy access)
      - ./logs/dev:/var/log/prosody

    # Health check
    healthcheck:
      test: ['CMD', '/opt/prosody/scripts/health-check.sh']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

    # Development resource limits (more generous)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'

    # Dependencies
    depends_on:
      xmpp-postgres-dev:
        condition: service_healthy

    # Networks
    networks:
      - xmpp_network_dev

  # ============================================================================
  # POSTGRESQL DATABASE (Development)
  # ============================================================================
  xmpp-postgres-dev:
    image: postgres:15-alpine
    container_name: xmpp-postgres-dev
    hostname: xmpp-postgres-dev
    restart: unless-stopped

    # Development environment
    env_file:
      - path: .env.dev
        required: true
    environment:
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

    # Port exposure for development tools
    ports:
      - '5432:5432'  # Expose PostgreSQL for development tools

    volumes:
      - xmpp_postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro

    # Development PostgreSQL settings (lighter)
    command: >
      postgres
        -c max_connections=50
        -c shared_buffers=128MB
        -c effective_cache_size=512MB
        -c maintenance_work_mem=32MB
        -c checkpoint_completion_target=0.9
        -c wal_buffers=8MB
        -c default_statistics_target=100
        -c random_page_cost=1.1
        -c effective_io_concurrency=200
        -c work_mem=2MB

    # Health check
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER:-prosody}']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s

    # Networks
    networks:
      - xmpp_network_dev

  # ============================================================================
  # COTURN - TURN/STUN SERVER (Development)
  # ============================================================================
  xmpp-coturn-dev:
    image: coturn/coturn:latest
    container_name: xmpp-coturn-dev
    hostname: xmpp-coturn-dev
    restart: unless-stopped
    
    # Development environment
    env_file:
      - path: .env.dev
        required: true
    
    ports:
      # STUN/TURN ports
      - '3478:3478'
      - '3478:3478/udp'
      - '5349:5349'
      - '5349:5349/udp'
      # Simplified relay port range for development
      - '49152-49200:49152-49200/udp'
    
    environment:
      - TURN_NO_LOOPBACK_PEERS=false  # Allow loopback for development
      - TURN_NO_MULTICAST_PEERS=true
      - TURN_STALE_NONCE=true
      - TURN_SECURE_STUN=true
      - TURN_LOG_FILE=stdout
      - TURN_VERBOSE=true  # More verbose logging for development
    
    volumes:
      - xmpp_coturn_data_dev:/var/lib/coturn
    
    command: >
      turnserver
        --listening-port=3478
        --tls-listening-port=5349
        --min-port=49152
        --max-port=49200
        --realm=$${TURN_REALM:-localhost}
        --server-name=$${TURN_DOMAIN:-localhost}
        --lt-cred-mech
        --user=$${TURN_USERNAME:-prosody}:$${TURN_PASSWORD:-devpassword}
        --use-auth-secret
        --static-auth-secret=$${TURN_SECRET:-devsecret}
        --mobility
        --no-cli
        --no-tlsv1
        --no-tlsv1_1
        --cipher-list=ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS
        --no-sslv2
        --no-sslv3
        --log-file=stdout
        --simple-log
        --verbose
    
    networks:
      - xmpp_network_dev

  # ============================================================================
  # ADMINER - DATABASE MANAGEMENT (Development)
  # ============================================================================
  xmpp-adminer-dev:
    image: adminer
    container_name: xmpp-adminer-dev
    hostname: xmpp-adminer-dev
    restart: unless-stopped
    ports:
      - '8080:8080'
    env_file:
      - path: .env.dev
        required: true
    environment:
      ADMINER_DEFAULT_DRIVER: "pgsql"
      ADMINER_DEFAULT_SERVER: "xmpp-postgres-dev"
      ADMINER_DEFAULT_DB: ${POSTGRES_DB:-prosody}
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-prosody}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
      ADMINER_AUTO_LOGIN: "true"  # Auto-login for development
    depends_on:
      xmpp-postgres-dev:
        condition: service_healthy
    networks:
      - xmpp_network_dev

  # ============================================================================
  # DEVELOPMENT TOOLS
  # ============================================================================
  
  # XMPP Testing Client (Converse.js for web-based testing)
  xmpp-webclient-dev:
    image: nginx:alpine
    container_name: xmpp-webclient-dev
    hostname: xmpp-webclient-dev
    restart: unless-stopped
    ports:
      - '8081:80'
    volumes:
      - ./dev-tools/webclient:/usr/share/nginx/html:ro
      - ./dev-tools/nginx-webclient.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - xmpp_network_dev
    depends_on:
      - xmpp-prosody-dev

  # Log viewer for development
  xmpp-logs-dev:
    image: amir20/dozzle:latest
    container_name: xmpp-logs-dev
    hostname: xmpp-logs-dev
    restart: unless-stopped
    ports:
      - '8082:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DOZZLE_FILTER=name=xmpp-*-dev
      - DOZZLE_NO_ANALYTICS=true
    networks:
      - xmpp_network_dev

# ============================================================================
# DEVELOPMENT VOLUMES
# ============================================================================
volumes:
  xmpp_prosody_data_dev:
    driver: local
    name: xmpp_prosody_data_dev
  xmpp_prosody_uploads_dev:
    driver: local
    name: xmpp_prosody_uploads_dev
  xmpp_postgres_data_dev:
    driver: local
    name: xmpp_postgres_data_dev
  xmpp_coturn_data_dev:
    driver: local
    name: xmpp_coturn_data_dev
  xmpp_certs_dev:
    driver: local
    name: xmpp_certs_dev

# ============================================================================
# DEVELOPMENT NETWORK
# ============================================================================
networks:
  xmpp_network_dev:
    name: xmpp_network_dev
    driver: bridge
