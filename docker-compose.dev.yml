# ============================================================================
# DEVELOPMENT DOCKER COMPOSE CONFIGURATION
# Professional Prosody XMPP Server - Development Environment
# ============================================================================
# Optimized for local development with relaxed security and enhanced debugging
# Usage: docker compose -f docker-compose.dev.yml up -d

name: xmpp-server-dev

services:
  # ============================================================================
  # PROSODY XMPP SERVER (Development)
  # ============================================================================
  xmpp-prosody:
    build:
      context: .
      dockerfile: Dockerfile
    image: allthingslinux/prosody:dev
    container_name: xmpp-prosody-dev
    hostname: xmpp-prosody-dev
    restart: unless-stopped
    env_file:
      - path: .env.dev
        required: true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    environment:
      - PROSODY_DB_HOST=xmpp-postgres-dev
      - PROSODY_DB_PORT=5432
      - PROSODY_LOG_LEVEL=info
      - PROSODY_ALLOW_REGISTRATION=true
      - PROSODY_DEVELOPMENT_MODE=true
      - PROSODY_PASTEBIN_PATH=/paste
    ports:
      - '5222:5222'
      - '5269:5269'
      - '5223:5223'
      - '5270:5270'
      - '5280:5280'
      - '5281:5281'
    volumes:
      - ./core/config:/etc/prosody/config:rw  # Read-write for development
      - xmpp_prosody_data:/var/lib/prosody/data
      - xmpp_prosody_uploads:/var/lib/prosody/uploads
      - xmpp_certs:/etc/prosody/certs  # Self-signed certificates
      - ./scripts:/opt/prosody/scripts:ro
      - ./.runtime/logs:/var/log/prosody
    healthcheck:
      test: ['CMD', '/usr/local/bin/health-check.sh']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    # Development resource limits (more generous)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'
    depends_on:
      xmpp-postgres:
        condition: service_healthy
    networks:
      - xmpp_network_dev

  # ============================================================================
  # POSTGRESQL DATABASE (Development)
  # ============================================================================
  xmpp-postgres:
    image: postgres:17-alpine
    container_name: xmpp-postgres-dev
    hostname: xmpp-postgres-dev
    restart: unless-stopped
    env_file:
      - path: .env.dev
        required: true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    environment:
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - '5432:5432'  # Expose for development tools
    volumes:
      - xmpp_postgres_data:/var/lib/postgresql/data
      - ./core/database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    # Development PostgreSQL settings (lighter)
    command: >
      postgres
        -c max_connections=50
        -c shared_buffers=128MB
        -c effective_cache_size=512MB
        -c maintenance_work_mem=32MB
        -c checkpoint_completion_target=0.9
        -c wal_buffers=8MB
        -c default_statistics_target=100
        -c random_page_cost=1.1
        -c effective_io_concurrency=200
        -c work_mem=2MB
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-prosody}']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - xmpp_network_dev

  # ============================================================================
  # COTURN - TURN/STUN SERVER (Development)
  # ============================================================================
  xmpp-coturn:
    image: coturn/coturn:latest
    container_name: xmpp-coturn-dev
    hostname: xmpp-coturn-dev
    restart: unless-stopped
    env_file:
      - path: .env.dev
        required: true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    ports:
      - '3478:3478'
      - '3478:3478/udp'
      - '5349:5349'
      - '5349:5349/udp'
      # Simplified relay port range for development
      - '49300-49350:49152-49202/udp'
    environment:
      - TURN_NO_LOOPBACK_PEERS=false  # Allow loopback for development
      - TURN_NO_MULTICAST_PEERS=true
      - TURN_STALE_NONCE=true
      - TURN_SECURE_STUN=true
      - TURN_LOG_FILE=stdout
      - TURN_VERBOSE=true  # More verbose logging for development
    volumes:
      - xmpp_coturn_data:/var/lib/coturn
    command: >
      turnserver
        --listening-port=3478
        --min-port=49152
        --max-port=49200
        --realm=${TURN_REALM:-localhost}
        --server-name=${TURN_DOMAIN:-localhost}
        --use-auth-secret
        --static-auth-secret=${TURN_SECRET:-devsecret}
        --mobility
        --no-cli
        --no-tls
        --no-dtls
        --log-file=stdout
        --simple-log
    networks:
      - xmpp_network_dev
  # ============================================================================
  # ADMINER - DATABASE MANAGEMENT (Development)
  # ============================================================================
  xmpp-adminer:
    image: adminer:latest
    container_name: xmpp-adminer-dev
    hostname: xmpp-adminer-dev
    restart: unless-stopped
    env_file:
      - path: .env.dev
        required: true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    ports:
      - '8081:8080'
    environment:
      ADMINER_DEFAULT_DRIVER: "pgsql"
      ADMINER_DEFAULT_SERVER: "xmpp-postgres-dev"
      ADMINER_DEFAULT_DB: ${POSTGRES_DB:-prosody}
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-prosody}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
      ADMINER_AUTO_LOGIN: "true"  # Auto-login for development
    command: ["sh", "-c", "php -S 0.0.0.0:8080 -t /var/www/html"]
    configs:
      - source: adminer-index.php
        target: /var/www/html/index.php
      - source: adminer-theme.css
        target: /var/www/html/adminer.css
    depends_on:
      xmpp-postgres:
        condition: service_healthy
    networks:
      - xmpp_network_dev

  # ============================================================================
  # DEVELOPMENT TOOLS
  # ============================================================================
  
  # Log viewer for development
  xmpp-logs-dev:
    image: amir20/dozzle:latest
    container_name: xmpp-logs-dev
    hostname: xmpp-logs-dev
    restart: unless-stopped
    ports:
      - '8082:8080'
    volumes:
      - ${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro
    environment:
      - DOZZLE_FILTER=name=xmpp-*
      - DOZZLE_NO_ANALYTICS=true
    networks:
      - xmpp_network_dev

  # NGINX reverse proxy for local/dev testing on standard ports
  xmpp-nginx-dev:
    image: nginx:stable
    container_name: xmpp-nginx-dev
    hostname: xmpp-nginx-dev
    restart: unless-stopped
    ports:
      - '8080:80'
      - '8443:443'
    volumes:
      - ./deployment/reverse-proxy/nginx/nginx-docker.conf:/etc/nginx/nginx.conf:ro
      - ./certs-dev:/opt/xmpp.atl.chat/certs:ro
      - ./static-files:/usr/share/nginx/html:ro
    depends_on:
      xmpp-prosody:
        condition: service_healthy
    networks:
      - xmpp_network_dev
  

# ============================================================================
# DEVELOPMENT VOLUMES
# ============================================================================
volumes:
  xmpp_prosody_data:
    external: true
    name: xmpp_prosody_data_dev
  xmpp_prosody_uploads:
    external: true
    name: xmpp_prosody_uploads_dev
  xmpp_postgres_data:
    external: true
    name: xmpp_postgres_data_dev
  xmpp_coturn_data:
    external: true
    name: xmpp_coturn_data_dev
  xmpp_certs:
    external: true
    name: xmpp_certs_dev

# ============================================================================
# DEVELOPMENT NETWORK
# ============================================================================
networks:
  xmpp_network_dev:
    name: xmpp_network_dev


configs:
  adminer-index.php:
    content: |
      <?php
        // Only auto-login in development environments
        if (getenv('ADMINER_AUTO_LOGIN') === 'true' && empty($$_GET)) {
          $$_POST['auth'] = [
            'server' => getenv('ADMINER_DEFAULT_SERVER'),
            'username' => getenv('ADMINER_DEFAULT_USERNAME'),
            'password' => getenv('ADMINER_DEFAULT_PASSWORD'),
            'driver' => getenv('ADMINER_DEFAULT_DRIVER'),
            'db' => getenv('ADMINER_DEFAULT_DB'),
          ];
        }
        include './adminer.php';
      ?>

  adminer-theme.css:
    file: ./web/themes/adminer-theme.css