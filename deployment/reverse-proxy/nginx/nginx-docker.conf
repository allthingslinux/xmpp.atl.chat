# Nginx reverse proxy for Prosody (Docker-aware)
# Proxies WebSocket, BOSH, upload, admin, metrics to the Prosody container
# Uses Let's Encrypt certs mounted at /opt/xmpp.atl.chat/certs

user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Optional rate limiting zones (not enabled by default)
    # limit_req_zone $binary_remote_addr zone=websocket:10m rate=10r/m;
    # limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

    # Redirect HTTP to HTTPS for xmpp.atl.chat
    server {
        listen 80;
        server_name xmpp.atl.chat;
        return 301 https://$server_name$request_uri;
    }

    # Redirect HTTP to HTTPS for upload.atl.chat
    server {
        listen 80;
        server_name upload.atl.chat;
        return 301 https://$server_name$request_uri;
    }

    # Minimal vhost for atl.chat to serve only XEP-0156 discovery
    server {
        listen 80;
        server_name atl.chat;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server for xmpp.atl.chat (service host)
    server {
        listen 443 ssl;
        http2 on;
        server_name xmpp.atl.chat;

        # Use existing atl.chat certificate (covers xmpp.atl.chat with wildcard)
        ssl_certificate /opt/xmpp.atl.chat/certs/live/atl.chat/fullchain.pem;
        ssl_certificate_key /opt/xmpp.atl.chat/certs/live/atl.chat/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
        ssl_prefer_server_ciphers off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;

        # WebSocket (wss://xmpp.atl.chat/xmpp-websocket)
        location /xmpp-websocket {
            proxy_pass https://xmpp-prosody:5281/xmpp-websocket;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name atl.chat;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 900s;
            proxy_send_timeout 900s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            proxy_redirect off;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        # Friendly WebSocket alias
        location /ws {
            proxy_pass https://xmpp-prosody:5281/xmpp-websocket;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name atl.chat;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 900s;
            proxy_send_timeout 900s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            proxy_redirect off;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        # BOSH (https://xmpp.atl.chat/http-bind)
        location /http-bind {
            proxy_pass https://xmpp-prosody:5281/http-bind;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name atl.chat;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 900s;
            proxy_send_timeout 900s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
            proxy_cache off;
        }

        # Friendly BOSH alias
        location /bosh {
            proxy_pass https://xmpp-prosody:5281/http-bind;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name atl.chat;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 900s;
            proxy_send_timeout 900s;
            proxy_connect_timeout 60s;
            proxy_buffering off;
            proxy_cache off;
        }

        # Upload (Prosody now serves 'upload' at /upload)
        location /upload {
            proxy_pass http://xmpp-prosody:5280/upload;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            client_max_body_size 100m;
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # Redirect dashed variant to underscore path
        location = /file-share {
            return 301 /file_share;
        }

        # Redirect legacy file_share endpoints to /upload
        location = /file_share {
            return 301 /upload/;
        }
        location /file_share/ {
            return 301 /upload/;
        }

        # Admin endpoint served by Nginx (no proxy)
        location /admin {
            default_type text/plain;
            add_header X-Content-Type-Options nosniff always;
            return 403 "Admin is disabled on the proxy.\n";
        }

        # Prosody OpenMetrics (mod_http_openmetrics) over HTTPS upstream
        location = /metrics {
            proxy_pass https://xmpp-prosody:5281/metrics;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name $host;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # XEP-0156 HTTP Alt-Connect discovery (served over HTTPS by Prosody)
        location = /.well-known { return 301 /.well-known/host-meta; }
        location /.well-known/ {
            proxy_pass https://xmpp-prosody:5281/.well-known/;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name $host;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # CORS for host-meta (XEP-0156 recommends allowing cross-origin reads)
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type" always;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Max-Age 7200 always;
                return 204;
            }
        }

        # Converse.js app served by Prosody (mod_conversejs)
        # https://modules.prosody.im/mod_conversejs.html
        # Switched to dedicated Converse web container
        location /conversejs/ {
            proxy_pass http://xmpp-conversejs/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }

        # Nginx stub status moved to a separate endpoint
        location = /nginx-status {
            stub_status;
            access_log off;
        }

        # Static files served by Nginx directly from /usr/share/nginx/html
        location /files {
            alias /usr/share/nginx/html/;
            autoindex off;
            try_files $uri $uri/ =404;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Health endpoint served by Nginx (no proxy)
        location = /health {
            default_type text/plain;
            return 200 "ok\n";
        }

        # Proxy root to Prosody http_files (Prosody serves static)
        location / {
            proxy_pass http://xmpp-prosody:5280/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }
    }

    # HTTPS server for upload.atl.chat (clean upload host)
    server {
        listen 443 ssl;
        http2 on;
        server_name upload.atl.chat;

        # Use existing atl.chat certificate (covers upload.atl.chat with wildcard)
        ssl_certificate /opt/xmpp.atl.chat/certs/live/atl.chat/fullchain.pem;
        ssl_certificate_key /opt/xmpp.atl.chat/certs/live/atl.chat/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
        ssl_prefer_server_ciphers off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Proxy to Prosody; keep original URI to avoid duplicating /upload
        # Prosody serves upload at /upload, and returned URLs include that path
        location / {
            proxy_pass http://xmpp-prosody:5280;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            client_max_body_size 100m;
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # Health endpoint
        location = /health {
            default_type text/plain;
            return 200 "ok\n";
        }
    }

    # HTTPS server for atl.chat to expose only /.well-known/* (XEP-0156)
    server {
        listen 443 ssl;
        http2 on;
        server_name atl.chat;

        ssl_certificate /opt/xmpp.atl.chat/certs/live/atl.chat/fullchain.pem;
        ssl_certificate_key /opt/xmpp.atl.chat/certs/live/atl.chat/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS;
        ssl_prefer_server_ciphers off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Only proxy /.well-known/* to Prosody (HTTPS upstream; requires SNI)
        location = /.well-known { return 301 /.well-known/host-meta; }
        location /.well-known/ {
            proxy_pass https://xmpp-prosody:5281/.well-known/;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;
            proxy_ssl_name atl.chat;
            # Host header must match the XMPP domain (VirtualHost), so altconnect serves atl.chat
            proxy_set_header Host atl.chat;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # CORS for host-meta (XEP-0156 recommends allowing cross-origin reads)
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type" always;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Max-Age 7200 always;
                return 204;
            }
        }

        # Friendly redirects for clients that tried defaults on atl.chat
        location = /ws { return 301 https://xmpp.atl.chat/ws; }
        location = /http-bind { return 301 https://xmpp.atl.chat/http-bind; }
        location = /bosh { return 301 https://xmpp.atl.chat/bosh; }

        # Everything else = 404 (we don't serve atl.chat content here)
        location / { return 404; }
    }
}


